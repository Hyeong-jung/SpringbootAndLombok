#server.port=10093
server.port=8000
spring.application.name=springboot-and-lombok

# ####### h2 database settings Start #######
spring.datasource.username=book_admin
spring.datasource.password=book_admin@1234!
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
# db-creation settings
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.properties.hibernate.show_sql=true
# browser url for h2 console - http://localhost:10093/h2-console
# browser url for h2 console - http://localhost:8000/h2-console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
# ####### h2 database settings End #######

# ####### MariaDB Settings Start #######
# mariadb
#spring.datasource.driverClassName=org.mariadb.jdbc.Driver
#spring.datasource.url=jdbc:mariadb://localhost:3306/test?characterEncoding=UTF-8&serverTimezone=UTC
#spring.datasource.username=root
#spring.datasource.password=nice_2946
# Log4J
#spring.datasource.driverClassName=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
#spring.datasource.url=jdbc:log4jdbc:mariadb://localhost:3306/test?characterEncoding=UTF-8&serverTimezone=UTC 
#spring.datasource.username=root
#spring.datasource.password=nice_2946
# ####### MariaDB Settings End #######

# ####### HikariCP Settings Start #######

# ===== MariaDB =====
#spring.datasource.driverClassName=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
#spring.datasource.url=jdbc:log4jdbc:mariadb://localhost:3306/test?characterEncoding=UTF-8&serverTimezone=UTC
# ===== MariaDB =====

# ===== OracleDB =====
#spring.datasource.driverClassName=oracle.jdbc.pool.OracleDataSource
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
# ===== OracleDB =====

#spring.datasource.hikari.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy

# ===== MariaDB =====
#spring.datasource.hikari.jdbc-url=jdbc:log4jdbc:mariadb://localhost:3306/test?serverTimezone=UTC&useUnicode=true&characterEncoding=utf8&useSSL=false
# ===== MariaDB =====

# ===== OracleDB =====
#spring.datasource.hikari.jdbc-url=jdbc:log4jdbc:oracle:thin:@localhost:1521:xe
# ===== OracleDB =====

# ===== MariaDB =====
#spring.datasource.hikari.username=root
#spring.datasource.hikari.password=nice_2946
# ===== MariaDB =====

# ===== OracleDB =====
#spring.datasource.hikari.username=SYS
#spring.datasource.hikari.username=sys as sysdba
#spring.datasource.hikari.password=nice_2946
# ===== OracleDB =====

spring.datasource.hikari.maximum-pool-size=10

# ===== MariaDB =====
#spring.datasource.hikari.connection-test-query=SELECT 1
# ===== MariaDB =====

# ===== OracleDB =====
#spring.datasource.hikari.connection-test-query=SELECT 1 FROM DUAL
# ===== OracleDB =====
# ####### HikariCP Settings End #######

#JSP View Resolver
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp
# 동적파일 자동반영
devtools.livereload.enabled=true

# ####### thymeleaf Start #######
#JSP와 같이 사용할 경우 뷰 구분을 위해 컨트롤러가 뷰 이름을 반환할때 thymeleaf/ 로 시작하면 타임리프로 처리하도록 view-names 지정
spring.thymeleaf.view-names=thymeleaf/*
spring.thymeleaf.prefix=classpath:templates/
spring.thymeleaf.suffix=.html
#thymeleaf를 사용하다 수정 사항이 생길 때 수정을 하면 재시작을 해줘야 한다. 이를 무시하고 브라우저 새로고침시 수정사항 반영을 취해 cache=false 설정(운영시는 true)
spring.thymeleaf.cache=false
spring.thymeleaf.check-template-location=true
# ####### thymeleaf End #######


# ####### MyBatis Settings Start #######
# mybatis 매핑 type을 짧게 쓰기 위한 설정
# mapper.xml에서 resultType을 지정할 때 com.springboot.lombok.model.TestVo 대신 TestVo로 간략히 할 수 있다.
#mybatis.type-aliases-package:com.god.bo.test.vo
mybatis.type-aliases-package:com.springboot.lombok.model
# mapper.xml 위치 지정
# **은 하위 폴더 레벨에 상관없이 모든 경로를 뜻하며, *는 아무 이름이나 와도 된다는것을 뜻합니다.
mybatis.mapper-locations: mybatis/**/*.xml
# ####### MyBatis Settings End #######

# ####### LogBack Settings Start #######
logging.level.root=info
logging.level.com.springboot.lombok=info
logging.level.com.springboot.lombok.controller=debug
spring.profiles.active=local
# ####### LogBack Settings End #######

# ####### Log4J Settings Start #######
log4jdbc.spylogdelegator.name=net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator
log4jdbc.dump.sql.maxlinelength=0
# ####### Log4J Settings End #######

# ####### JPA Settings Start #######
#JPA 설정
#Dialect 설정
# ===== MariaDB =====
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect
# ===== MariaDB =====

# ===== OracleDB =====
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle10gDialect
# ===== OracleDB =====

#하이버네이트가 실행하는 모든 SQL문을 콘솔로 출력해 준다.
spring.jpa.properties.hibernate.show_sql=true
#콘솔에 출력되는 JPA 실행 쿼리를 가독성있게 표현한다.
spring.jpa.properties.hibernate.format_sql=true
#디버깅이 용이하도록 SQL문 이외에 추가적인 정보를 출력해 준다.
spring.jpa.properties.hibernate.use_sql_comments=true
#spring.jpa.properties.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.ddl-auto=create-drop
#spring.jpa.properties.hibernate.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.generate-ddl=true
# ####### JPA Settings End #######


spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size= 200MB
spring.servlet.multipart.max-request-size=215MB


file.upload-dir=./uploads
#file.upload-dir=/Users/김형중/Documents